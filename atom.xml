<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一期一会</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-03-19T05:32:13.129Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>王康</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java并发编程学习笔记</title>
    <link href="http://yoursite.com/2016/03/19/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2016/03/19/Java并发编程学习笔记/</id>
    <published>2016-03-19T05:32:13.000Z</published>
    <updated>2016-03-19T05:32:13.129Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Java NIO学习笔记</title>
    <link href="http://yoursite.com/2016/03/17/Java-NIO%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2016/03/17/Java-NIO学习笔记/</id>
    <published>2016-03-17T12:11:32.000Z</published>
    <updated>2016-03-19T05:15:07.991Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Java-NIO相关&quot;&gt;&lt;a href=&quot;#Java-NIO相关&quot; class=&quot;headerlink&quot; title=&quot;Java NIO相关&quot;&gt;&lt;/a&gt;Java NIO相关&lt;/h1&gt;&lt;p&gt;NIO创建的目的是为了让程序员实现更快的I/O而无需编写自定义的本机代码。NIO将最耗时的I/O操作（即填充和提取缓冲区）转移回操作系统，因此可以极大的提高效率。&lt;/p&gt;
&lt;h2 id=&quot;NIO组成&quot;&gt;&lt;a href=&quot;#NIO组成&quot; class=&quot;headerlink&quot; title=&quot;NIO组成&quot;&gt;&lt;/a&gt;NIO组成&lt;/h2&gt;&lt;p&gt;Java NIO由下面几个核心部分组成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Channels&lt;/li&gt;
&lt;li&gt;Buffers&lt;/li&gt;
&lt;li&gt;Selectors&lt;br&gt;通道是对原 I/O 包中的流的模拟。到任何目的地(或来自任何地方)的所有数据都必须通过一个 Channel对象。一个Buffer实质上是一个容器对象。发送给一个通道的所有对象都必须首先放到缓冲区中；同样地，从通道中读取的任何数据都要读到缓冲区中。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Channel&quot;&gt;&lt;a href=&quot;#Channel&quot; class=&quot;headerlink&quot; title=&quot;Channel&quot;&gt;&lt;/a&gt;Channel&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;FileChannel：从文件中读写数据&lt;/li&gt;
&lt;li&gt;DatagramChannel：通过UDP读写数据&lt;/li&gt;
&lt;li&gt;SocketChannel：通过TCP读写数据&lt;/li&gt;
&lt;li&gt;ServerSocketChannel：可以监听新进来的TCP连接。对每个新进来的连接都会创建一个SocketChannel&lt;h3 id=&quot;Buffer&quot;&gt;&lt;a href=&quot;#Buffer&quot; class=&quot;headerlink&quot; title=&quot;Buffer&quot;&gt;&lt;/a&gt;Buffer&lt;/h3&gt;缓冲区本质上是一块可以写入数据，然后可以从中读取数据的内存。这块内存被包装成NIO Buffer对象，并提供了一组方法，用来方便的访问该块内存。&lt;h4 id=&quot;Buffer的capacity-position-limit&quot;&gt;&lt;a href=&quot;#Buffer的capacity-position-limit&quot; class=&quot;headerlink&quot; title=&quot;Buffer的capacity, position, limit&quot;&gt;&lt;/a&gt;Buffer的capacity, position, limit&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://ifeve.com/wp-content/uploads/2013/06/buffers-modes.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&quot;capacity&quot;&gt;&lt;a href=&quot;#capacity&quot; class=&quot;headerlink&quot; title=&quot;capacity&quot;&gt;&lt;/a&gt;capacity&lt;/h5&gt;&lt;p&gt;作为一个内存块，Buffer有一个固定的大小值，也叫“capacity”.你只能往里写capacity个byte、long，char等类型。一旦Buffer满了，需要将其清空（通过读数据或者清除数据）才能继续写数据往里写数据。&lt;/p&gt;
&lt;h5 id=&quot;position&quot;&gt;&lt;a href=&quot;#position&quot; class=&quot;headerlink&quot; title=&quot;position&quot;&gt;&lt;/a&gt;position&lt;/h5&gt;&lt;p&gt;当你写数据到Buffer中时，position表示当前的位置。初始的position值为0.当一个byte、long等数据写到Buffer后， position会向前移动到下一个可插入数据的Buffer单元。position最大可为capacity – 1.&lt;br&gt;当读取数据时，也是从某个特定位置读。当将Buffer从写模式切换到读模式，position会被重置为0. 当从Buffer的position处读取数据时，position向前移动到下一个可读的位置。&lt;/p&gt;
&lt;h5 id=&quot;limit&quot;&gt;&lt;a href=&quot;#limit&quot; class=&quot;headerlink&quot; title=&quot;limit&quot;&gt;&lt;/a&gt;limit&lt;/h5&gt;&lt;p&gt;在写模式下，Buffer的limit表示你最多能往Buffer里写多少数据。 写模式下，limit等于Buffer的capacity。&lt;br&gt;当切换Buffer到读模式时， limit表示你最多能读到多少数据。因此，当切换Buffer到读模式时，limit会被设置成写模式下的position值。换句话说，你能读到之前写入的所有数据（limit被设置成已写数据的数量，这个值在写模式下就是position）&lt;/p&gt;
&lt;h4 id=&quot;flip-方法&quot;&gt;&lt;a href=&quot;#flip-方法&quot; class=&quot;headerlink&quot; title=&quot;flip()方法&quot;&gt;&lt;/a&gt;flip()方法&lt;/h4&gt;&lt;p&gt;flip方法将Buffer从写模式切换到读模式。调用flip()方法会将position设回0，并将limit设置成之前position的值。&lt;/p&gt;
&lt;h4 id=&quot;rewind-方法&quot;&gt;&lt;a href=&quot;#rewind-方法&quot; class=&quot;headerlink&quot; title=&quot;rewind()方法&quot;&gt;&lt;/a&gt;rewind()方法&lt;/h4&gt;&lt;p&gt;Buffer.rewind()将position设回0，所以你可以重读Buffer中的所有数据。limit保持不变，仍然表示能从Buffer中读取多少个元素（byte、char等）。&lt;/p&gt;
&lt;h4 id=&quot;mark-和reset-方法&quot;&gt;&lt;a href=&quot;#mark-和reset-方法&quot; class=&quot;headerlink&quot; title=&quot;mark()和reset()方法&quot;&gt;&lt;/a&gt;mark()和reset()方法&lt;/h4&gt;&lt;p&gt;通过调用Buffer.mark()方法，可以标记Buffer中的一个特定position。之后可以通过调用Buffer.reset()方法恢复到这个position。&lt;/p&gt;
&lt;h4 id=&quot;slice-方法&quot;&gt;&lt;a href=&quot;#slice-方法&quot; class=&quot;headerlink&quot; title=&quot;slice()方法&quot;&gt;&lt;/a&gt;slice()方法&lt;/h4&gt;&lt;p&gt;slice() 方法根据现有的缓冲区创建子缓冲区 。其中&lt;strong&gt;新缓冲区与原来的缓冲区的一部分共享数据&lt;/strong&gt;。&lt;br&gt;在某种意义上，子缓冲区就像原来的缓冲区中的一个窗口 。窗口的起始和结束位置通过设置 position 和 limit 值来指定，然后调用 Buffer 的 slice() 方法：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ByteBuffer buffer = ByteBuffer.allocate( &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i&amp;lt;buffer.capacity(); ++i) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     buffer.put( (&lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;)i );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;buffer.position( &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;buffer.limit( &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ByteBuffer slice = buffer.slice();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面的代码创建了一个包含槽3~槽6的子缓冲区&lt;/p&gt;
&lt;h4 id=&quot;直接和间接缓冲区&quot;&gt;&lt;a href=&quot;#直接和间接缓冲区&quot; class=&quot;headerlink&quot; title=&quot;直接和间接缓冲区&quot;&gt;&lt;/a&gt;直接和间接缓冲区&lt;/h4&gt;&lt;p&gt;Sun的官方文档是这样描述直接缓冲区的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;给定一个直接字节缓冲区，Java 虚拟机将尽最大努力直接对它执行本机 I/O 操作。也就是说，它会在每一次调用底层操作系统的本机 I/O 操作之前(或之后)，尝试避免将缓冲区的内容拷贝到一个中间缓冲区中(或者从一个中间缓冲区中拷贝数据)。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ByteBuffer buffer = ByteBuffer.allocateDirect( &lt;span class=&quot;number&quot;&gt;1024&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Java-NIO相关&quot;&gt;&lt;a href=&quot;#Java-NIO相关&quot; class=&quot;headerlink&quot; title=&quot;Java NIO相关&quot;&gt;&lt;/a&gt;Java NIO相关&lt;/h1&gt;&lt;p&gt;NIO创建的目的是为了让程序员实现更快的I/O而无需编写自定义的本机代码。N
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>测试</title>
    <link href="http://yoursite.com/2016/03/17/%E6%B5%8B%E8%AF%95/"/>
    <id>http://yoursite.com/2016/03/17/测试/</id>
    <published>2016-03-17T06:35:43.000Z</published>
    <updated>2016-03-17T06:40:01.490Z</updated>
    
    <content type="html">&lt;h1 id=&quot;欢迎使用-Cmd-Markdown-编辑阅读器&quot;&gt;&lt;a href=&quot;#欢迎使用-Cmd-Markdown-编辑阅读器&quot; class=&quot;headerlink&quot; title=&quot;欢迎使用 Cmd Markdown 编辑阅读器&quot;&gt;&lt;/a&gt;欢迎使用 Cmd Markdown 编辑阅读器&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;我们理解您需要更便捷更高效的工具记录思想，整理笔记、知识，并将其中承载的价值传播给他人，&lt;strong&gt;Cmd Markdown&lt;/strong&gt; 是我们给出的答案 —— 我们为记录思想和分享知识提供更专业的工具。 您可以使用 Cmd Markdown：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;整理知识，学习笔记&lt;/li&gt;
&lt;li&gt;发布日记，杂文，所见所想&lt;/li&gt;
&lt;li&gt;撰写发布技术文稿（代码支持）&lt;/li&gt;
&lt;li&gt;撰写发布学术论文（LaTeX 公式支持）&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://www.zybuluo.com/static/img/logo.png&quot; alt=&quot;cmd-markdown-logo&quot;&gt;&lt;/p&gt;
&lt;p&gt;除了您现在看到的这个 Cmd Markdown 在线版本，您还可以前往以下网址下载：&lt;/p&gt;
&lt;h3 id=&quot;Windows-Mac-Linux-全平台客户端&quot;&gt;&lt;a href=&quot;#Windows-Mac-Linux-全平台客户端&quot; class=&quot;headerlink&quot; title=&quot;Windows/Mac/Linux 全平台客户端&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.zybuluo.com/cmd/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Windows/Mac/Linux 全平台客户端&lt;/a&gt;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;请保留此份 Cmd Markdown 的欢迎稿兼使用说明，如需撰写新稿件，点击顶部工具栏右侧的 &lt;i class=&quot;icon-file&quot;&gt;&lt;/i&gt; &lt;strong&gt;新文稿&lt;/strong&gt; 或者使用快捷键 &lt;code&gt;Ctrl+Alt+N&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&quot;什么是-Markdown&quot;&gt;&lt;a href=&quot;#什么是-Markdown&quot; class=&quot;headerlink&quot; title=&quot;什么是 Markdown&quot;&gt;&lt;/a&gt;什么是 Markdown&lt;/h2&gt;&lt;p&gt;Markdown 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号以最小的输入代价生成极富表现力的文档：譬如您正在阅读的这份文档。它使用简单的符号标记不同的标题，分割不同的段落，&lt;strong&gt;粗体&lt;/strong&gt; 或者 &lt;em&gt;斜体&lt;/em&gt; 某些文字，更棒的是，它还可以&lt;/p&gt;
&lt;h3 id=&quot;1-制作一份待办事宜-Todo-列表&quot;&gt;&lt;a href=&quot;#1-制作一份待办事宜-Todo-列表&quot; class=&quot;headerlink&quot; title=&quot;1. 制作一份待办事宜 Todo 列表&quot;&gt;&lt;/a&gt;1. 制作一份待办事宜 &lt;a href=&quot;https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#13-待办事宜-todo-列表&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Todo 列表&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;[ ] 支持以 PDF 格式导出文稿&lt;/li&gt;
&lt;li&gt;[ ] 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率&lt;/li&gt;
&lt;li&gt;[x] 新增 Todo 列表功能&lt;/li&gt;
&lt;li&gt;[x] 修复 LaTex 公式渲染问题&lt;/li&gt;
&lt;li&gt;[x] 新增 LaTex 公式编号功能&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;2-书写一个质能守恒公式-LaTeX&quot;&gt;&lt;a href=&quot;#2-书写一个质能守恒公式-LaTeX&quot; class=&quot;headerlink&quot; title=&quot;2. 书写一个质能守恒公式[^LaTeX]&quot;&gt;&lt;/a&gt;2. 书写一个质能守恒公式[^LaTeX]&lt;/h3&gt;&lt;p&gt;$$E=mc^2$$&lt;/p&gt;
&lt;h3 id=&quot;3-高亮一段代码-code&quot;&gt;&lt;a href=&quot;#3-高亮一段代码-code&quot; class=&quot;headerlink&quot; title=&quot;3. 高亮一段代码[^code]&quot;&gt;&lt;/a&gt;3. 高亮一段代码[^code]&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@requires_authorization&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SomeClass&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;pass&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&#39;__main__&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# A comment&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;hello world&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;4-高效绘制-流程图&quot;&gt;&lt;a href=&quot;#4-高效绘制-流程图&quot; class=&quot;headerlink&quot; title=&quot;4. 高效绘制 流程图&quot;&gt;&lt;/a&gt;4. 高效绘制 &lt;a href=&quot;https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#7-流程图&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;流程图&lt;/a&gt;&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;st=&amp;gt;start: Start&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;op=&amp;gt;operation: Your Operation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cond=&amp;gt;condition: Yes or No?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;e=&amp;gt;end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;st-&amp;gt;op-&amp;gt;cond&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cond(yes)-&amp;gt;e&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cond(no)-&amp;gt;op&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;5-高效绘制-序列图&quot;&gt;&lt;a href=&quot;#5-高效绘制-序列图&quot; class=&quot;headerlink&quot; title=&quot;5. 高效绘制 序列图&quot;&gt;&lt;/a&gt;5. 高效绘制 &lt;a href=&quot;https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#8-序列图&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;序列图&lt;/a&gt;&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Alice-&amp;gt;Bob: Hello Bob, how are you?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Note right of Bob: Bob thinks&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Bob--&amp;gt;Alice: I am good thanks!&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;6-绘制表格&quot;&gt;&lt;a href=&quot;#6-绘制表格&quot; class=&quot;headerlink&quot; title=&quot;6. 绘制表格&quot;&gt;&lt;/a&gt;6. 绘制表格&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;项目&lt;/th&gt;
&lt;th style=&quot;text-align:right&quot;&gt;价格&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;数量&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;计算机&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;\$1600&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;手机&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;\$12&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;管线&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;\$1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;234&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;7-更详细语法说明&quot;&gt;&lt;a href=&quot;#7-更详细语法说明&quot; class=&quot;headerlink&quot; title=&quot;7. 更详细语法说明&quot;&gt;&lt;/a&gt;7. 更详细语法说明&lt;/h3&gt;&lt;p&gt;想要查看更详细的语法说明，可以参考我们准备的 &lt;a href=&quot;https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Cmd Markdown 简明语法手册&lt;/a&gt;，进阶用户可以参考 &lt;a href=&quot;https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#cmd-markdown-高阶语法手册&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Cmd Markdown 高阶语法手册&lt;/a&gt; 了解更多高级功能。&lt;/p&gt;
&lt;p&gt;总而言之，不同于其它 &lt;em&gt;所见即所得&lt;/em&gt; 的编辑器：你只需使用键盘专注于书写文本内容，就可以生成印刷级的排版格式，省却在键盘和工具栏之间来回切换，调整内容和格式的麻烦。&lt;strong&gt;Markdown 在流畅的书写和印刷级的阅读体验之间找到了平衡。&lt;/strong&gt; 目前它已经成为世界上最大的技术分享网站 GitHub 和 技术问答网站 StackOverFlow 的御用书写格式。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;什么是-Cmd-Markdown&quot;&gt;&lt;a href=&quot;#什么是-Cmd-Markdown&quot; class=&quot;headerlink&quot; title=&quot;什么是 Cmd Markdown&quot;&gt;&lt;/a&gt;什么是 Cmd Markdown&lt;/h2&gt;&lt;p&gt;您可以使用很多工具书写 Markdown，但是 Cmd Markdown 是这个星球上我们已知的、最好的 Markdown 工具——没有之一 ：）因为深信文字的力量，所以我们和你一样，对流畅书写，分享思想和知识，以及阅读体验有极致的追求，我们把对于这些诉求的回应整合在 Cmd Markdown，并且一次，两次，三次，乃至无数次地提升这个工具的体验，最终将它演化成一个 &lt;strong&gt;编辑/发布/阅读&lt;/strong&gt; Markdown 的在线平台——您可以在任何地方，任何系统/设备上管理这里的文字。&lt;/p&gt;
&lt;h3 id=&quot;1-实时同步预览&quot;&gt;&lt;a href=&quot;#1-实时同步预览&quot; class=&quot;headerlink&quot; title=&quot;1. 实时同步预览&quot;&gt;&lt;/a&gt;1. 实时同步预览&lt;/h3&gt;&lt;p&gt;我们将 Cmd Markdown 的主界面一分为二，左边为&lt;strong&gt;编辑区&lt;/strong&gt;，右边为&lt;strong&gt;预览区&lt;/strong&gt;，在编辑区的操作会实时地渲染到预览区方便查看最终的版面效果，并且如果你在其中一个区拖动滚动条，我们有一个巧妙的算法把另一个区的滚动条同步到等价的位置，超酷！&lt;/p&gt;
&lt;h3 id=&quot;2-编辑工具栏&quot;&gt;&lt;a href=&quot;#2-编辑工具栏&quot; class=&quot;headerlink&quot; title=&quot;2. 编辑工具栏&quot;&gt;&lt;/a&gt;2. 编辑工具栏&lt;/h3&gt;&lt;p&gt;也许您还是一个 Markdown 语法的新手，在您完全熟悉它之前，我们在 &lt;strong&gt;编辑区&lt;/strong&gt; 的顶部放置了一个如下图所示的工具栏，您可以使用鼠标在工具栏上调整格式，不过我们仍旧鼓励你使用键盘标记格式，提高书写的流畅度。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.zybuluo.com/static/img/toolbar-editor.png&quot; alt=&quot;tool-editor&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;3-编辑模式&quot;&gt;&lt;a href=&quot;#3-编辑模式&quot; class=&quot;headerlink&quot; title=&quot;3. 编辑模式&quot;&gt;&lt;/a&gt;3. 编辑模式&lt;/h3&gt;&lt;p&gt;完全心无旁骛的方式编辑文字：点击 &lt;strong&gt;编辑工具栏&lt;/strong&gt; 最右测的拉伸按钮或者按下 &lt;code&gt;Ctrl + M&lt;/code&gt;，将 Cmd Markdown 切换到独立的编辑模式，这是一个极度简洁的写作环境，所有可能会引起分心的元素都已经被挪除，超清爽！&lt;/p&gt;
&lt;h3 id=&quot;4-实时的云端文稿&quot;&gt;&lt;a href=&quot;#4-实时的云端文稿&quot; class=&quot;headerlink&quot; title=&quot;4. 实时的云端文稿&quot;&gt;&lt;/a&gt;4. 实时的云端文稿&lt;/h3&gt;&lt;p&gt;为了保障数据安全，Cmd Markdown 会将您每一次击键的内容保存至云端，同时在 &lt;strong&gt;编辑工具栏&lt;/strong&gt; 的最右侧提示 &lt;code&gt;已保存&lt;/code&gt; 的字样。无需担心浏览器崩溃，机器掉电或者地震，海啸——在编辑的过程中随时关闭浏览器或者机器，下一次回到 Cmd Markdown 的时候继续写作。&lt;/p&gt;
&lt;h3 id=&quot;5-离线模式&quot;&gt;&lt;a href=&quot;#5-离线模式&quot; class=&quot;headerlink&quot; title=&quot;5. 离线模式&quot;&gt;&lt;/a&gt;5. 离线模式&lt;/h3&gt;&lt;p&gt;在网络环境不稳定的情况下记录文字一样很安全！在您写作的时候，如果电脑突然失去网络连接，Cmd Markdown 会智能切换至离线模式，将您后续键入的文字保存在本地，直到网络恢复再将他们传送至云端，即使在网络恢复前关闭浏览器或者电脑，一样没有问题，等到下次开启 Cmd Markdown 的时候，她会提醒您将离线保存的文字传送至云端。简而言之，我们尽最大的努力保障您文字的安全。&lt;/p&gt;
&lt;h3 id=&quot;6-管理工具栏&quot;&gt;&lt;a href=&quot;#6-管理工具栏&quot; class=&quot;headerlink&quot; title=&quot;6. 管理工具栏&quot;&gt;&lt;/a&gt;6. 管理工具栏&lt;/h3&gt;&lt;p&gt;为了便于管理您的文稿，在 &lt;strong&gt;预览区&lt;/strong&gt; 的顶部放置了如下所示的 &lt;strong&gt;管理工具栏&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.zybuluo.com/static/img/toolbar-manager.jpg&quot; alt=&quot;tool-manager&quot;&gt;&lt;/p&gt;
&lt;p&gt;通过管理工具栏可以：&lt;/p&gt;
&lt;p&gt;&lt;i class=&quot;icon-share&quot;&gt;&lt;/i&gt; 发布：将当前的文稿生成固定链接，在网络上发布，分享&lt;br&gt;&lt;i class=&quot;icon-file&quot;&gt;&lt;/i&gt; 新建：开始撰写一篇新的文稿&lt;br&gt;&lt;i class=&quot;icon-trash&quot;&gt;&lt;/i&gt; 删除：删除当前的文稿&lt;br&gt;&lt;i class=&quot;icon-cloud&quot;&gt;&lt;/i&gt; 导出：将当前的文稿转化为 Markdown 文本或者 Html 格式，并导出到本地&lt;br&gt;&lt;i class=&quot;icon-reorder&quot;&gt;&lt;/i&gt; 列表：所有新增和过往的文稿都可以在这里查看、操作&lt;br&gt;&lt;i class=&quot;icon-pencil&quot;&gt;&lt;/i&gt; 模式：切换 普通/Vim/Emacs 编辑模式&lt;/p&gt;
&lt;h3 id=&quot;7-阅读工具栏&quot;&gt;&lt;a href=&quot;#7-阅读工具栏&quot; class=&quot;headerlink&quot; title=&quot;7. 阅读工具栏&quot;&gt;&lt;/a&gt;7. 阅读工具栏&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://www.zybuluo.com/static/img/toolbar-reader.jpg&quot; alt=&quot;tool-manager&quot;&gt;&lt;/p&gt;
&lt;p&gt;通过 &lt;strong&gt;预览区&lt;/strong&gt; 右上角的 &lt;strong&gt;阅读工具栏&lt;/strong&gt;，可以查看当前文稿的目录并增强阅读体验。&lt;/p&gt;
&lt;p&gt;工具栏上的五个图标依次为：&lt;/p&gt;
&lt;p&gt;&lt;i class=&quot;icon-list&quot;&gt;&lt;/i&gt; 目录：快速导航当前文稿的目录结构以跳转到感兴趣的段落&lt;br&gt;&lt;i class=&quot;icon-chevron-sign-left&quot;&gt;&lt;/i&gt; 视图：互换左边编辑区和右边预览区的位置&lt;br&gt;&lt;i class=&quot;icon-adjust&quot;&gt;&lt;/i&gt; 主题：内置了黑白两种模式的主题，试试 &lt;strong&gt;黑色主题&lt;/strong&gt;，超炫！&lt;br&gt;&lt;i class=&quot;icon-desktop&quot;&gt;&lt;/i&gt; 阅读：心无旁骛的阅读模式提供超一流的阅读体验&lt;br&gt;&lt;i class=&quot;icon-fullscreen&quot;&gt;&lt;/i&gt; 全屏：简洁，简洁，再简洁，一个完全沉浸式的写作和阅读环境&lt;/p&gt;
&lt;h3 id=&quot;8-阅读模式&quot;&gt;&lt;a href=&quot;#8-阅读模式&quot; class=&quot;headerlink&quot; title=&quot;8. 阅读模式&quot;&gt;&lt;/a&gt;8. 阅读模式&lt;/h3&gt;&lt;p&gt;在 &lt;strong&gt;阅读工具栏&lt;/strong&gt; 点击 &lt;i class=&quot;icon-desktop&quot;&gt;&lt;/i&gt; 或者按下 &lt;code&gt;Ctrl+Alt+M&lt;/code&gt; 随即进入独立的阅读模式界面，我们在版面渲染上的每一个细节：字体，字号，行间距，前背景色都倾注了大量的时间，努力提升阅读的体验和品质。&lt;/p&gt;
&lt;h3 id=&quot;9-标签、分类和搜索&quot;&gt;&lt;a href=&quot;#9-标签、分类和搜索&quot; class=&quot;headerlink&quot; title=&quot;9. 标签、分类和搜索&quot;&gt;&lt;/a&gt;9. 标签、分类和搜索&lt;/h3&gt;&lt;p&gt;在编辑区任意行首位置输入以下格式的文字可以标签当前文档：&lt;/p&gt;
&lt;p&gt;标签： 未分类&lt;/p&gt;
&lt;p&gt;标签以后的文稿在【文件列表】（Ctrl+Alt+F）里会按照标签分类，用户可以同时使用键盘或者鼠标浏览查看，或者在【文件列表】的搜索文本框内搜索标题关键字过滤文稿，如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.zybuluo.com/static/img/file-list.png&quot; alt=&quot;file-list&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;10-文稿发布和分享&quot;&gt;&lt;a href=&quot;#10-文稿发布和分享&quot; class=&quot;headerlink&quot; title=&quot;10. 文稿发布和分享&quot;&gt;&lt;/a&gt;10. 文稿发布和分享&lt;/h3&gt;&lt;p&gt;在您使用 Cmd Markdown 记录，创作，整理，阅读文稿的同时，我们不仅希望它是一个有力的工具，更希望您的思想和知识通过这个平台，连同优质的阅读体验，将他们分享给有相同志趣的人，进而鼓励更多的人来到这里记录分享他们的思想和知识，尝试点击 &lt;i class=&quot;icon-share&quot;&gt;&lt;/i&gt; (Ctrl+Alt+P) 发布这份文档给好友吧！&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;再一次感谢您花费时间阅读这份欢迎稿，点击 &lt;i class=&quot;icon-file&quot;&gt;&lt;/i&gt; (Ctrl+Alt+N) 开始撰写新的文稿吧！祝您在这里记录、阅读、分享愉快！&lt;/p&gt;
&lt;p&gt;作者 &lt;a href=&quot;http://weibo.com/ghosert&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;@ghosert&lt;/a&gt;&lt;br&gt;2015 年 06月 15日    &lt;/p&gt;
&lt;p&gt;[^LaTeX]: 支持 &lt;strong&gt;LaTeX&lt;/strong&gt; 编辑显示支持，例如：$\sum_{i=1}^n a_i=0$， 访问 &lt;a href=&quot;http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MathJax&lt;/a&gt; 参考更多使用方法。&lt;/p&gt;
&lt;p&gt;[^code]: 代码高亮功能支持包括 Java, Python, JavaScript 在内的，&lt;strong&gt;四十一&lt;/strong&gt;种主流编程语言。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;欢迎使用-Cmd-Markdown-编辑阅读器&quot;&gt;&lt;a href=&quot;#欢迎使用-Cmd-Markdown-编辑阅读器&quot; class=&quot;headerlink&quot; title=&quot;欢迎使用 Cmd Markdown 编辑阅读器&quot;&gt;&lt;/a&gt;欢迎使用 Cmd Markdown
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>helloworld</title>
    <link href="http://yoursite.com/2016/03/17/helloworld/"/>
    <id>http://yoursite.com/2016/03/17/helloworld/</id>
    <published>2016-03-17T02:25:34.000Z</published>
    <updated>2016-03-17T07:41:29.010Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://7xrz2m.com1.z0.glb.clouddn.com/th.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;this is the first pages created by wangkang!&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://7xrz2m.com1.z0.glb.clouddn.com/th.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;this is the first pages created by wangkang!&lt;/p&gt;

    
    </summary>
    
    
  </entry>
  
</feed>
